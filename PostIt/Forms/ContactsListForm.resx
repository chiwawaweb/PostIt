<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="TsbNewContact.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAANcSURBVFhHvZVvSJNRFMZHUorRH0QjhcKIyiIEqUykMoNl
        SWpKbc6aGrky00jKSgUR+kNhEEhBURCRH/JL+bUPRUVECYpZaRumzlZtmlJm9PHUc7dzve9Sm9HtwoMy
        3nt+zznvOec1TfeEN4bRVAo8pucAsKU1WcjclkIZHam0480mKYvLrNcEggMc8yic4p5GSsW/mEvL26PJ
        /n67fgPImsGLn88RYCihPYbKvDn6DaDUDIeWtUXRyo4FlPp6EZ0c3P1/DACMsq/+BV73Ko42uuIpy7mC
        To/Y9RvIcabTktb5ouxJnbEic8BzXavo0leHfgPodMCRufntUgl39CfTtdEK/QYKerYJeFpXPGU7E8jW
        kyjgxwY2062x4/oNHOrPEZkDbu9NooPuFAGv/5BJzT9q9Buo9lgFvLhvLZW7UyUcuve97u8M4FKoggFk
        Hgy/6NtFN4f8FYhqighJEo7tBqlrFd2OhsM7d7izqNKTJ+FHBjZI+PlPuQKuqnGkQPw9O5hNtb6tVOlN
        o1LPerL1J4qmxdjm92VQbMtskgZ4u0G83bBg0Gzc6cW9a/4Ix29cFVQJd3AXfYPmxcbEDil12scN8Hrl
        nc5wdcwQDOLgE8Hxe43HLJ5DpVQwlhb2B5YYviWO7j3jBni9MhwXsGDUMUNQBAfkgjdPQs95dxrAEO7g
        LsORDOKCAXj0w5lU2G4xGlDhXHZuNhWOzNUy43e8EhWuZo5vBX83GB7ZYjIayOpKF+8GF3AxeMYZrkJV
        OIQqAc5NhljBZWf4bwbQ7epO5802FZjhyBpGGR6cuVp2hs9qNpH1iWJgvy+TTg0VUv1wCTV8KaPGb0eF
        ro5VCeH/G6PVYs6v+MoNcJiFacDrPIepauCAULmnSKjEZRMq6rbS3pcWIWRvexYwgDPRkphMd4bPSDiP
        GOCoIMAIGqoEfDoHl5o+1xvgKDngeN9sIPD4vz8Ifn2w1jDjDMcEoeTaDVz2npBwNBumh2dcbjddB8Eb
        PlZOCEeno9m0G0CnMxyrG/CFj/1jVtxp1W8AjYasGQ4wzzhGTLuBinf7JHzS7abrIDgajTOfd3+GYbvl
        83bTdRAcn1EVHnHXDw+7raxXXQfB0WgQyg0ha4AtD/x/tRrAAWAqBR4L8ZhMPwHL05ubvPlAxAAAAABJ
        RU5ErkJggg==
</value>
  </data>
  <metadata name="statusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>149, 17</value>
  </metadata>
</root>